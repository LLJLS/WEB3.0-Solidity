{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "nums1",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "m",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "nums2",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "n",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "inPlace",
						"type": "bool"
					}
				],
				"name": "mergeSortedArrays",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testMerge",
				"outputs": [],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"mergeSortedArrays(uint256[],uint256,uint256[],uint256,bool)": {
					"params": {
						"inPlace": "是否原地修改nums1 (true) 或返回新数组 (false) ",
						"m": "nums1中的有效元素数量",
						"n": "nums2中的有效元素数量",
						"nums1": "第一个有序数组（必须足够容纳所有元素）",
						"nums2": "第二个有序数组"
					},
					"returns": {
						"_0": "当inPlace=false时返回新数组，否则返回空数组"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"mergeSortedArrays(uint256[],uint256,uint256[],uint256,bool)": {
					"notice": "合并两个有序数组（单一方法实现） "
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"assignments/first/05/05.sol": "UnifiedArrayMerger"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"assignments/first/05/05.sol": {
			"keccak256": "0x83733ead08269769fb18970feb6914e7e8f1c6f112d9d4344959557e4af96e2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://f582436ffe5a07c43325d63212d5c9162c6b95f9cffde8c89ec99b892c50036c",
				"dweb:/ipfs/QmUNx7UWSBdVxYMzywcb436q26FZWs2p6zegKeYGrBS1HX"
			]
		}
	},
	"version": 1
}